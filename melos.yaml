name: events_tracker

packages:
  - .
  - packages/**

sdkPath: .fvm/versions/3.24.5

scripts:
  build_and_test:
    description: GA main script
    run: bash scripts/build_and_test.sh

  codegen:
    description: Generate code for all packages
    run: melos run codegen:build_runner --no-select && melos run codegen:locale --no-select
    exec:
      failFast: true

  codegen:build_runner:
    description: Generate code for all packages using build_runner
    # We have to delete all generated by flutter_gen code prior generation because it doesn't
    # support incremental generation, nor it supports deleting files that are not needed anymore
    run: 'find . -type f -name "*.gen.dart" -delete && fvm dart run build_runner build --delete-conflicting-outputs'
    # concurrency set to ONE because we SHOULD generate all code for packages prior we
    # started generation for the app
    exec:
      concurrency: 1
      failFast: true
    packageFilters:
      dependsOn: "build_runner"

  codegen:locale:
    description: Generate localizations code for all packages
    run: fvm dart run easy_localization:generate  --source-dir assets/translations -f keys --output-file locale_keys.g.dart && fvm dart format lib/generated/locale_keys.g.dart
    exec:
      failFast: true
    packageFilters:
      dependsOn: "easy_localization"

  check-format:
    description: Check the format of a specific package in this project.
    run: dart format --set-exit-if-changed .
    exec:
      failFast: true

  test:
    description: Run all Dart & Flutter tests in this project.
    run: melos run test:dart --no-select && melos run test:flutter --no-select

  test:dart:
    description: Run Dart tests for a specific package in this project.
    run: "dart test test"
    exec:
      concurrency: 1
      failFast: true
    packageFilters:
      flutter: false
      dirExists: test

  test:flutter:
    description: Run Flutter tests for a specific package in this project.
    run: "fvm flutter test test"
    exec:
      concurrency: 1
      failFast: true
    packageFilters:
      flutter: true
      dirExists: test

  test:integration:
    description: Run Flutter teintegration teststs for a specific package in this project.
    # TODO(nesquikm): Maybe we should separate integration_test for the app and packages
    # because packages may not use flavors at all
    run: "fvm flutter test --flavor production integration_test"
    exec:
      concurrency: 1
      failFast: true
    packageFilters:
      flutter: true
      dirExists: integration_test

  check-all:
    description: Prepare to commit by checking all things
    run: melos check-format && melos analyze && melos test && melos test:integration
    exec:
      failFast: true

command:
  clean:
    hooks:
      post: bash scripts/clean.sh
